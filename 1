Write a Python function to determine whether a given number is 
prime or not. 

def is_prime(n):
    """Check if a number is prime."""
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

# Example usage
number = 29
if is_prime(number):
    print(f"{number} is a prime number.")
else:
    print(f"{number} is not a prime number.")


• Implement a function called is_prime(number) which takes an integer 
parameter number and returns True if the number is prime, and False 
otherwise.

def is_prime(number):
    """Return True if the number is prime, False otherwise."""
    if number <= 1:
        return False
    if number <= 3:
        return True
    if number % 2 == 0 or number % 3 == 0:
        return False
    
    i = 5
    while i * i <= number:
        if number % i == 0 or number % (i + 2) == 0:
            return False
        i += 6
        
    return True

# Example usage
if _name_ == "_main_":
    test_number = 29
    print(f"{test_number} is prime: {is_prime(test_number)}")


• Use an if-else statement inside the is_prime() function to check if the given 
number is divisible by any integer from 2 to the square root of the number. 
If it is divisible, return False; otherwise, return True.

import math

def is_prime(num):
    if num <= 1:
        return False  # Numbers less than or equal to 1 are not prime
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False  # If num is divisible by i, it's not prime
    return True  # If no divisors were found, num is prime

# Example usage:
print(is_prime(11))  # Output: True
print(is_prime(15))  # Output: False


• Implement a loop to repeatedly ask the user to enter a number. Inside the 
loop, call the is_prime() function to determine whether the entered number 
is prime or not.

import math

def is_prime(num):
    if num <= 1:
        return False  # Numbers less than or equal to 1 are not prime
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False  # If num is divisible by i, it's not prime
    return True  # If no divisors were found, num is prime

def main():
    while True:
        user_input = input("Enter a number to check if it's prime (or type 'exit' to quit): ")
        
        if user_input.lower() == 'exit':
            print("Exiting the program.")
            break  # Exit the loop if the user types 'exit'
        
        try:
            number = int(user_input)  # Convert input to an integer
            if is_prime(number):
                print(f"{number} is a prime number.")
            else:
                print(f"{number} is not a prime number.")
        except ValueError:
            print("Please enter a valid integer.")

# Run the program
main()

• Print an appropriate message indicating whether the number is prime or 
not

import math

def is_prime(num):
    if num <= 1:
        return False  # Numbers less than or equal to 1 are not prime
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False  # If num is divisible by i, it's not prime
    return True  # If no divisors were found, num is prime

def main():
    while True:
        user_input = input("Enter a number to check if it's prime (or type 'exit' to quit): ")
        
        if user_input.lower() == 'exit':
            print("Exiting the program.")
            break  # Exit the loop if the user types 'exit'
        
        try:
            number = int(user_input)  # Convert input to an integer
            if is_prime(number):
                print(f"{number} is a prime number.")
            else:
                print(f"{number} is not a prime number.")
        except ValueError:
            print("Please enter a valid integer.")

# Run the program
main()
